# SPDX-FileCopyrightText: Copyright (c) 2023-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: map-object-to-primitive
pattern: |
  ⟦
    𝐵-before,
    𝜏-map ↦ ⟦
      φ ↦ Φ.hone.map,
      opcode ↦ 𝑒-map-opcode,
      class ↦ 𝑒-class,
      target-handle ↦ 𝑒-map-target-handle,
      target-class ↦ 𝑒-map-target-class,
      target-method ↦ 𝑒-map-target-method,
      target-signature ↦ 𝑒-map-target-signature,
      bridge-input ↦ 𝑒-map-bridge-input,
      bridge-output ↦ 𝑒-map-bridge-output
    ⟧,
    𝜏-any ↦ ⟦
      φ ↦ Φ.hone.𝜏-func,
      opcode ↦ 𝑒-func-opcode,
      class ↦ 𝑒-class,
      target-handle ↦ 𝑒-func-target-handle,
      target-class ↦ 𝑒-func-target-class,
      target-method ↦ 𝑒-func-target-method,
      target-signature ↦ 𝑒-func-target-signature,
      𝐵-func-rest
    ⟧,
    𝐵-after
  ⟧
result: |
  ⟦
    𝐵-before,
    𝜏-map ↦ ⟦
      φ ↦ Φ.hone.map,
      opcode ↦ 𝑒-map-opcode,
      class ↦ 𝑒-class,
      target-handle ↦ 𝑒-map-target-handle,
      target-class ↦ 𝑒-map-target-class,
      target-method ↦ 𝑒-map-target-method,
      target-signature ↦ 𝑒-map-target-signature,
      bridge-input ↦ 𝑒-map-bridge-input,
      bridge-output ↦ 𝑒-map-bridge-output
    ⟧,
    𝜏-cast ↦ ⟦
      φ ↦ Φ.hone.cast,
      class ↦ 𝑒-class,
      opcode ↦ 𝑒-cast-opcode
    ⟧,
    𝜏-any ↦ ⟦
      φ ↦ Φ.hone.𝜏-func,
      opcode ↦ 𝑒-func-opcode,
      class ↦ 𝑒-class,
      target-handle ↦ 𝑒-func-target-handle,
      target-class ↦ 𝑒-func-target-class,
      target-method ↦ 𝑒-func-target-method,
      target-signature ↦ 𝑒-func-target-signature,
      𝐵-func-rest
    ⟧,
    𝐵-after
  ⟧
when:
  and:
    - matches:
        - '\(.*\)[DFIJ]$'
        - 𝑒-map-target-signature
    - matches:
        - '\([BCDFIJS]\).+'
        - 𝑒-func-target-signature
where:
  - meta: 𝜏-cast
    function: random-tau
    args: [𝐵-before, 𝜏-map, 𝜏-any, 𝐵-after]
  - meta: 𝑒-cast-from
    function: sed
    args:
      - 𝑒-map-target-signature
      - '"s/\\(.*\\)D/d/g"'
      - '"s/\\(.*\\)F/f/g"'
      - '"s/\\(.*\\)I/i/g"'
      - '"s/\\(.*\\)J/l/g"'
  - meta: 𝑒-cast-to
    function: sed
    args:
      - 𝑒-func-target-signature
      - '"s/\\(B\\).+/b/g"'
      - '"s/\\(C\\).+/c/g"'
      - '"s/\\(D\\).+/d/g"'
      - '"s/\\(F\\).+/f/g"'
      - '"s/\\(I\\).+/i/g"'
      - '"s/\\(J\\).+/l/g"'
      - '"s/\\(S\\).+/s/g"'
  - meta: 𝑒-cast-opcode
    function: concat
    args: [𝑒-cast-from, '"2"', 𝑒-cast-to]
having:
  not:
    eq:
      - 𝑒-cast-from
      - 𝑒-cast-to
