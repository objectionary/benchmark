# SPDX-FileCopyrightText: Copyright (c) 2023-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: lambda-to-map
pattern: |
  ⟦
    φ ↦ Φ.hone.lambda,
    class ↦ 𝑒-class-name,
    method ↦ "apply",
    interface ↦ "()Ljava/util/function/Function;",
    lambda-signature ↦ "(Ljava/lang/Object;)Ljava/lang/Object;",
    target-class ↦ 𝑒-target-class-name,
    target-method ↦ 𝑒-target-method-name,
    target-signature ↦ 𝑒-target-signature,
    bridge-signature ↦ 𝑒-bridge-signature,
    stream-class ↦ "java/util/stream/Stream",
    stream-method ↦ "map",
    stream-signature ↦ "(Ljava/util/function/Function;)Ljava/util/stream/Stream;",
    𝐵1
  ⟧
result: |
  ⟦
    φ ↦ Φ.hone.map,
    class ↦ 𝑒-class-name,
    target-class ↦ 𝑒-target-class-name,
    target-method ↦ 𝑒-target-method-name,
    target-input ↦ 𝑒-target-input-type,
    target-output ↦ 𝑒-target-output-type,
    bridge-input ↦ 𝑒-bridge-input-type,
    bridge-output ↦ 𝑒-bridge-output-type
  ⟧
where:
  - meta: 𝑒-target-input-type
    function: sed
    # "(Ljava/lang/String;)Ljava/lang/Integer;"
    args:
      - 𝑒-target-signature
      - '"s/\\(L(.+);\\).*/$1/g"'
  - meta: 𝑒-target-output-type
    function: sed
    # "(Ljava/lang/String;)Ljava/lang/Integer;"
    args:
      - 𝑒-target-signature
      - '"s/.*;\\)L(.+);/$1/g"'
  - meta: 𝑒-bridge-input-type
    function: sed
    # "(Ljava/lang/String;)Ljava/lang/Integer;"
    args:
      - 𝑒-bridge-signature
      - '"s/\\(L(.+);\\).*/$1/g"'
  - meta: 𝑒-bridge-output-type
    function: sed
    # "(Ljava/lang/String;)Ljava/lang/Integer;"
    args:
      - 𝑒-bridge-signature
      - '"s/.*;\\)L(.+);/$1/g"'
