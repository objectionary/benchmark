# SPDX-FileCopyrightText: Copyright (c) 2023-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: distill-to-mapMulti
pattern: |
  ⟦
    φ ↦ Φ.jeo.class,
    𝐵-class-head,
    𝜏-method ↦ ⟦
      φ ↦ Φ.jeo.method,
      𝐵-method-head,
      body ↦ ⟦
        𝐵-body-head,
        𝜏-distill ↦ ⟦
          φ ↦ Φ.hone.distill,
          class ↦ 𝑒-class,
          bridge-input ↦ 𝑒-bridge-input,
          bridge-output ↦ 𝑒-bridge-output,
          start ↦ 𝑒-start,
          accepted ↦ 𝑒-accepted,
          returned ↦ 𝑒-returned,
          body ↦ ⟦ 𝐵-body, ρ ↦ ∅ ⟧
        ⟧,
        𝐵-body-tail
      ⟧,
      𝐵-method-tail
    ⟧,
    𝐵-class-tail,
    ρ ↦ ∅
  ⟧
result: |
  ⟦
    φ ↦ Φ.jeo.class,
    𝐵-class-head,
    𝜏-method ↦ ⟦
      φ ↦ Φ.jeo.method,
      𝐵-method-head,
      body ↦ ⟦
        𝐵-body-head,
        𝜏-distill ↦ ⟦
          φ ↦ Φ.hone.mapMulti,
          class ↦ 𝑒-class,
          target-method ↦ 𝑒-target-method,
          bridge-input ↦ 𝑒-bridge-input,
          map-multi-consumer ↦ 𝑒-map-multi-consumer,
          lambda-signature ↦ 𝑒-lambda-signature,
          consumer ↦ 𝑒-consumer,
          stream-class ↦ 𝑒-stream-class
        ⟧,
        𝐵-body-tail
      ⟧,
      𝐵-method-tail
    ⟧,
    𝐵-class-tail,
    𝜏-distill-lambda ↦ ⟦
      φ ↦ Φ.jeo.method,
      access ↦ 4106,
      descriptor ↦ 𝑒-signature,
      signature ↦ "",
      maxs ↦ ⟦
        φ ↦ Φ.jeo.maxs,
        max-stack ↦ 4,
        max-locals ↦ 𝑒-max-locals
      ⟧,
      params ↦ ⟦
        φ ↦ Φ.jeo.params,
        i1 ↦ ⟦
          φ ↦ Φ.jeo.param,
          index ↦ 0,
          access ↦ 0,
          type ↦ 𝑒-bridge-input
        ⟧,
        i2 ↦ ⟦
          φ ↦ Φ.jeo.param,
          index ↦ 1,
          access ↦ 0,
          type ↦ 𝑒-consumer
        ⟧
      ⟧,
      body ↦ ⟦
        φ ↦ Φ.jeo.seq.of,
        i-pop-item ↦ ⟦
          φ ↦ Φ.jeo.opcode.𝜏-load-item,
          i1 ↦ 0
        ⟧,
        𝐵-body,
        i-pop-consumer ↦ ⟦
          φ ↦ Φ.jeo.opcode.aload,
          i1 ↦ 𝑒-pop-consumer-index
        ⟧,
        i-dup-x ↦ ⟦ φ ↦ Φ.jeo.opcode.𝜏-dup-x ⟧,
        i-pop ↦ ⟦ φ ↦ Φ.jeo.opcode.pop ⟧,
        i-invoke ↦ ⟦
          φ ↦ Φ.jeo.opcode.invokeinterface,
          i2 ↦ 𝑒-consumer-class,
          i3 ↦ "accept",
          i4 ↦ 𝑒-invokeinterface-signature,
          i5 ↦ Φ̇.true
        ⟧,
        i-return ↦ ⟦
          φ ↦ Φ.jeo.opcode.return
        ⟧,
        ρ ↦ ∅
      ⟧,
      name ↦ 𝑒-target-method
    ⟧,
    ρ ↦ ∅
  ⟧
where:
  - meta: 𝜏-distill-lambda
    function: random-tau
    args: ['name', '𝐵-class-head', '𝐵-class-tail']
  - meta: 𝑒-target-method
    function: random-string
    args: [ '"distill_%d"' ]
  - meta: 𝑒-map-multi-consumer
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^L.+;$/Ljava\\/util\\/function\\/BiConsumer;/g"'
      - '"s/^D$/Ljava\\/util\\/stream\\/DoubleStream$DoubleMapMultiConsumer;/g"'
      - '"s/^I$/Ljava\\/util\\/stream\\/IntStream$IntMapMultiConsumer;/g"'
      - '"s/^J$/Ljava\\/util\\/stream\\/LongStream$LongMapMultiConsumer;/g"'
  - meta: 𝑒-lambda-signature
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^L.+;$/(Ljava\\/lang\\/Object;Ljava\\/lang\\/Object;)V/g"'
      - '"s/^D$/(DLjava\\/util\\/function\\/DoubleConsumer;)V/g"'
      - '"s/^I$/(ILjava\\/util\\/function\\/IntConsumer;)V/g"'
      - '"s/^J$/(JLjava\\/util\\/function\\/LongConsumer;)V/g"'
  - meta: 𝑒-consumer
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^L.+;$/Ljava\\/util\\/function\\/Consumer;/g"'
      - '"s/^D$/Ljava\\/util\\/function\\/DoubleConsumer;/g"'
      - '"s/^I$/Ljava\\/util\\/function\\/IntConsumer;/g"'
      - '"s/^J$/Ljava\\/util\\/function\\/LongConsumer;/g"'
  - meta: 𝑒-stream-class
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^L.+;$/java\\/util\\/stream\\/Stream/g"'
      - '"s/^D$/java\\/util\\/stream\\/DoubleStream/g"'
      - '"s/^I$/java\\/util\\/stream\\/IntStream/g"'
      - '"s/^J$/java\\/util\\/stream\\/LongStream/g"'
  - meta: 𝑒-signature
    function: concat
    args:
      - '"("'
      - 𝑒-bridge-input
      - 𝑒-consumer
      - '")V"'
  - meta: 𝑒-load-item
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^L.+;$/aload/g"'
      - '"s/^D$/dload/g"'
      - '"s/^I$/iload/g"'
      - '"s/^J$/lload/g"'
  - meta: 𝜏-load-item
    function: tau
    args: [𝑒-load-item]
  - meta: 𝑒-dup-x
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^[DJ]$/dup_x2/g"'
      - '"s/^(L.+;|I)$/dup_x1/g"'
  - meta: 𝜏-dup-x
    function: tau
    args: [𝑒-dup-x]
  - meta: 𝑒-consumer-class
    function: sed
    args:
      - 𝑒-consumer
      - '"s/L(.+);/$1/g"'
  - meta: 𝑒-invokeinterface-input
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^L.+;$/Ljava\\/lang\\/Object;/g"'
  - meta: 𝑒-invokeinterface-signature
    function: concat
    args: ['"("', 𝑒-invokeinterface-input,'")V"']
  - meta: 𝑒-max-locals-str
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^[DJ]$/3/g"'
      - '"s/^(B|C|F|I|S|Z|L.+;)$/2/g"'
  - meta: 𝑒-max-locals
    function: number
    args: [𝑒-max-locals-str]
  - meta: 𝑒-pop-consumer-index-str
    function: sed
    args:
      - 𝑒-bridge-input
      - '"s/^[DJ]$/2/g"'
      - '"s/^(B|C|F|I|S|Z|L.+;)$/1/g"'
  - meta: 𝑒-pop-consumer-index
    function: number
    args: [𝑒-pop-consumer-index-str]
