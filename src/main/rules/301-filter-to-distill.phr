# SPDX-FileCopyrightText: Copyright (c) 2023-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: filter-to-distill
pattern: |
  ⟦
    𝐵-body-head,
    𝜏-opcode ↦ ⟦
      φ ↦ Φ.hone.filter,
      class ↦ 𝑒-class,
      target-class ↦ 𝑒-target-class,
      target-method ↦ 𝑒-target-method,
      target-input ↦ 𝑒-target-input,
      bridge-input ↦ 𝑒-bridge-input
    ⟧,
    𝐵-body-tail
  ⟧
result: |
  ⟦
    𝐵-body-head,
    𝜏-opcode ↦ ⟦
      φ ↦ Φ.hone.distill,
      class ↦ 𝑒-class,
      target-class ↦ 𝑒-target-class,
      target-input ↦ 𝑒-target-input,
      target-output ↦ 𝑒-target-input,
      bridge-input ↦ 𝑒-bridge-input,
      bridge-output ↦ 𝑒-bridge-input,
      locals ↦ ⟦
        item ↦ 𝑒-bridge-input,
        consumer ↦ "java/util/function/Consumer"
      ⟧,
      body ↦ ⟦
        i-dup ↦ ⟦
          φ ↦ Φ.jeo.opcode.dup
        ⟧,
        i1 ↦ ⟦
          φ ↦ Φ.jeo.opcode.invokestatic,
          i2 ↦ 𝑒-target-class,
          i3 ↦ 𝑒-target-method,
          i4 ↦ 𝑒-signature,
          i5 ↦ Φ̇.false
        ⟧,
        i2 ↦ ⟦
          φ ↦ Φ.jeo.opcode.ifne,
          i2 ↦ ⟦
            φ ↦ Φ.jeo.label,
            i1 ↦ 𝑒-label
          ⟧
        ⟧,
        i3 ↦ ⟦
          φ ↦ Φ.jeo.opcode.return
        ⟧,
        i4 ↦ ⟦
          φ ↦ Φ.jeo.label,
          i1 ↦ 𝑒-label
        ⟧
      ⟧
    ⟧,
    𝐵-body-tail
  ⟧
where:
  - meta: 𝑒-label
    function: random-string
    args: ['"L%d"']
  - meta: 𝑒-signature
    function: concat
    args:
      - '"(L"'
      - 𝑒-target-input
      - '";)Z"'
