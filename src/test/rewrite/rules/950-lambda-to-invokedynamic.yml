# SPDX-FileCopyrightText: Copyright (c) 2023-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: lambda-to-invokeinterface
pattern: |
  ⟦
    𝐵1,
    𝜏1 ↦ ⟦
      base ↦ "Q.hone.lambda",
      method ↦ 𝑒-method-name,
      interface ↦ 𝑒-interface-name,
      signature ↦ 𝑒-signature,
      target-class ↦ 𝑒-class-name,
      target-method ↦ 𝑒-target-method-name,
      target-signature ↦ 𝑒-target-signature,
      intermediate-signature ↦ 𝑒-intermediate-signature,
      stream-class ↦ 𝑒-stream-class-name,
      stream-method ↦ 𝑒-stream-method-name,
      stream-signature ↦ 𝑒-stream-signature
    ⟧,
    𝐵2
  ⟧
result: |
  ⟦
    𝐵1,
    𝜏-invokedynamic ↦ ⟦
      base ↦ "Q.jeo.opcode.invokedynamic",
      i1 ↦ 186,
      i2 ↦ 𝑒-method-name,
      i3 ↦ 𝑒-interface-name,
      i4 ↦ ⟦
        base ↦ "Q.jeo.handle",
        i1 ↦ 6,
        i2 ↦ "java/lang/invoke/LambdaMetafactory",
        i3 ↦ "metafactory",
        i4 ↦ "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;",
        i5 ↦ Φ̇.false
      ⟧,
      i5 ↦ ⟦
        base ↦ "Q.jeo.type",
        i1 ↦ 𝑒-signature
      ⟧,
      i6 ↦ ⟦
        base ↦ "Q.jeo.handle",
        i1 ↦ 6,
        i2 ↦ 𝑒-class-name,
        i3 ↦ 𝑒-target-method-name,
        i4 ↦ 𝑒-target-signature,
        i5 ↦ Φ̇.false
      ⟧,
      i7 ↦ ⟦
        base ↦ "Q.jeo.type",
        i1 ↦ 𝑒-intermediate-signature
      ⟧
    ⟧,
    𝜏-invokeinterface ↦ ⟦
      base ↦ "Q.jeo.opcode.invokeinterface",
      i1 ↦ 185,
      i2 ↦ 𝑒-stream-class-name,
      i3 ↦ 𝑒-stream-method-name,
      i4 ↦ 𝑒-stream-signature,
      i5 ↦ Φ̇.true
    ⟧,
    𝐵2
  ⟧
where:
  - meta: 𝜏-invokedynamic
    function: random-tau
    args: [ '𝐵1', '𝐵2' ]
  - meta: 𝜏-invokeinterface
    function: random-tau
    args: [ '𝐵1', '𝜏-invokedynamic', '𝐵2' ]
