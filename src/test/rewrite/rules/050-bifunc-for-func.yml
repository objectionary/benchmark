# SPDX-FileCopyrightText: Copyright (c) 2023-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
name: bifunc-for-func
pattern: |
  ⟦
    𝐵0,
    𝜏-class ↦ ⟦
      φ ↦ Φ.jeo.class,
      𝐵1,
      name ↦ 𝑒-class-name,
      𝐵2,
      𝜏1 ↦ ⟦
        φ ↦ Φ.jeo.method,
        access ↦ 4106,
        descriptor ↦ 𝑒-func-descriptor,
        signature ↦ "",
        maxs ↦ ⟦
          φ ↦ Φ.jeo.maxs,
          𝜏3 ↦ 𝑒-max-stack,
          𝜏4 ↦ 𝑒-max-locals,
          𝐵3
        ⟧,
        params ↦ ⟦
          φ ↦ Φ.jeo.params,
          𝜏5 ↦ ⟦
            φ ↦ Φ.jeo.param,
            index ↦ 0,
            access ↦ 0,
            type ↦ 𝑒-func-input-type
          ⟧,
          𝐵4
        ⟧,
        body ↦ 𝑒-body,
        name ↦ 𝑒-func-name,
        𝐵5
      ⟧,
      𝐵6
    ⟧,
    𝐵7
  ⟧
result: |
  ⟦
    𝐵0,
    𝜏-class ↦ ⟦
      φ ↦ Φ.jeo.class,
      𝐵1,
      name ↦ 𝑒-class-name,
      𝐵2,
      𝜏1 ↦ ⟦
        φ ↦ Φ.jeo.method,
        access ↦ 4106,
        descriptor ↦ 𝑒-func-descriptor,
        signature ↦ "",
        maxs ↦ ⟦
          φ ↦ Φ.jeo.maxs,
          max-stack ↦ 𝑒-max-stack,
          max-locals ↦ 𝑒-max-locals
        ⟧,
        params ↦ ⟦
          φ ↦ Φ.jeo.params,
          i1 ↦ ⟦
            φ ↦ Φ.jeo.param,
            index ↦ 0,
            access ↦ 0,
            type ↦ 𝑒-func-input-type
          ⟧,
          𝐵4
        ⟧,
        body ↦ 𝑒-body,
        name ↦ 𝑒-func-name,
        𝐵5
      ⟧,
      𝐵6,
      𝜏-bifunc ↦ ⟦
        φ ↦ Φ.jeo.method,
        access ↦ 4106,
        descriptor ↦ 𝑒-bifunc-descriptor,
        signature ↦ "",
        maxs ↦ ⟦
          φ ↦ Φ.jeo.maxs,
          max-stack ↦ 2,
          max-locals ↦ 2
        ⟧,
        params ↦ ⟦
          φ ↦ Φ.jeo.params,
          i1 ↦ ⟦
            φ ↦ Φ.jeo.param,
            index ↦ 0,
            access ↦ 0,
            type ↦ 𝑒-func-input-type
          ⟧,
          i2 ↦ ⟦
            φ ↦ Φ.jeo.param,
            index ↦ 1,
            access ↦ 0,
            type ↦ "Ljava/util/function/Consumer;"
          ⟧
        ⟧,
        body ↦ ⟦
          φ ↦ Φ.jeo.seq.of5,
          i-pop-item ↦ ⟦
            φ ↦ Φ.jeo.opcode.aload,
            i1 ↦ 25,
            i1 ↦ 1
          ⟧,
          i-pop-consumer ↦ ⟦
            φ ↦ Φ.jeo.opcode.aload,
            i1 ↦ 25,
            i1 ↦ 0
          ⟧,
          i1 ↦ ⟦
            φ ↦ Φ.jeo.opcode.invokestatic,
            i1 ↦ 184,
            i2 ↦ 𝑒-class-name,
            i3 ↦ 𝑒-func-name,
            i4 ↦ 𝑒-func-descriptor,
            i5 ↦ Φ̇.false
          ⟧,
          i-invoke ↦ ⟦
            φ ↦ Φ.jeo.opcode.invokeinterface,
            i1 ↦ 185,
            i2 ↦ "java/util/function/Consumer",
            i3 ↦ "accept",
            i4 ↦ "(Ljava/lang/Object;)V",
            i5 ↦ Φ̇.true
          ⟧,
          i-return ↦ ⟦
            φ ↦ Φ.jeo.opcode.return,
            i1 ↦ 177
          ⟧
        ⟧,
        name ↦ 𝑒-bifunc-name
      ⟧
    ⟧,
    𝐵7
  ⟧
when:
  and:
    - matches:
        - '\(L[a-zA-Z0-9_$/]+;\)L[a-zA-Z0-9_$/]+;'
        - 𝑒-func-descriptor
where:
  - meta: 𝜏-bifunc
    function: random-tau
    args: ['base', 'name', '𝐵1', '𝐵2', '𝐵3', '𝐵6']
  - meta: 𝑒-bifunc-name
    function: concat
    args:
      - 𝑒-func-name
      - '"_bifunc"'
  - meta: 𝑒-bifunc-descriptor
    function: concat
    args:
      - '"("'
      - 𝑒-func-input-type
      - '"Ljava/util/function/Consumer;)V"'
having:
  not:
    part-of:
      - 𝑒-bifunc-name
      - 𝐵6
