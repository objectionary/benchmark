{⟦
  j$Foo ↦ ⟦
    φ ↦ Φ.jeo.class,
    version ↦ 65,
    access ↦ 33,
    supername ↦ "java/lang/Object",
    interfaces ↦ ⟦
      φ ↦ Φ.jeo.seq.of0
    ⟧,
    name ↦ "Foo",
    j$main ↦ ⟦
      φ ↦ Φ.jeo.method,
      access ↦ 9,
      descriptor ↦ "([Ljava/lang/String;)V",
      signature ↦ "",
      maxs ↦ ⟦
        φ ↦ Φ.jeo.maxs,
        val26 ↦ 7,
        val27 ↦ 4
      ⟧,
      params ↦ ⟦
        φ ↦ Φ.jeo.params,
        arg0 ↦ ⟦
          φ ↦ Φ.jeo.param,
          index ↦ 0,
          access ↦ 0,
          type ↦ "[Ljava/lang/String;"
        ⟧
      ⟧,
      body ↦ ⟦
        φ ↦ Φ.jeo.seq.of50,
        instruction239 ↦ ⟦
          φ ↦ Φ.hone.distill,
          class ↦ "Foo",
          target-class ↦ "java/lang/Integer",
          target-input ↦ "Ljava/lang/Integer;",
          target-output ↦ "Ljava/lang/Integer;",
          bridge-input ↦ "Ljava/lang/Integer;",
          bridge-output ↦ "Ljava/lang/Integer;",
          locals ↦ ⟦
            item ↦ "java/lang/Integer",
            consumer ↦ "java/util/function/Consumer"
          ⟧,
          body ↦ ⟦
            i462 ↦ ⟦
              φ ↦ Φ.jeo.opcode.invokestatic,
              v463 ↦ "java/lang/Integer",
              v464 ↦ "valueOf",
              v465 ↦ "(I)Ljava/lang/String;",
              v466 ↦ Φ̇.false
            ⟧
          ⟧
        ⟧,
        instruction291 ↦ ⟦
          φ ↦ Φ.hone.distill,
          class ↦ "Foo",
          target-class ↦ "Foo",
          target-input ↦ "Ljava/lang/Object;",
          target-output ↦ "Ljava/lang/Object;",
          bridge-input ↦ "Ljava/lang/Integer;",
          bridge-output ↦ "Ljava/lang/String;",
          locals ↦ ⟦
            item ↦ "java/lang/String",
            consumer ↦ "java/util/function/Consumer"
          ⟧,
          body ↦ ⟦
            i462 ↦ ⟦
              φ ↦ Φ.jeo.opcode.invokestatic,
              v463 ↦ "java/lang/Integer",
              v464 ↦ "valueOf",
              v465 ↦ "(I)Ljava/lang/Integer;",
              v466 ↦ Φ̇.false
            ⟧
          ⟧
        ⟧
      ⟧
    ⟧
  ⟧
⟧}
